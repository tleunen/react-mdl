From e580fb0ebfe58278dae2a9d7dff3de5fa0ca3812 Mon Sep 17 00:00:00 2001
From: Tommy Leunen <tommy.leunen+github@gmail.com>
Date: Mon, 21 Mar 2016 16:28:22 -0400
Subject: [PATCH] 1.1.3

Signed-off-by: Tommy Leunen <tommy.leunen+github@gmail.com>
---
 src/layout/_layout.scss    | 34 ++++++++++++++++----------------
 src/layout/layout.js       | 48 ++++++++++++++++++----------------------------
 src/mdlComponentHandler.js |  3 ++-
 3 files changed, 38 insertions(+), 47 deletions(-)

diff --git a/src/layout/_layout.scss b/src/layout/_layout.scss
index de8fc0c..0768839 100644
--- a/src/layout/_layout.scss
+++ b/src/layout/_layout.scss
@@ -39,14 +39,9 @@
 
 // Main layout class.
 .mdl-layout {
+  position: absolute;
   width: 100%;
   height: 100%;
-  display: flex;
-  flex-direction: column;
-  overflow-y: auto;
-  overflow-x: hidden;
-  position: relative;
-  -webkit-overflow-scrolling: touch;
 }
 
 // Utility classes for screen sizes.
@@ -58,10 +53,15 @@
   display: none;
 }
 
-.mdl-layout__container {
-  position: absolute;
+.mdl-layout__inner-container {
   width: 100%;
   height: 100%;
+  display: flex;
+  flex-direction: column;
+  overflow-y: auto;
+  overflow-x: hidden;
+  position: relative;
+  -webkit-overflow-scrolling: touch;
 }
 
 
@@ -166,7 +166,7 @@
     }
 
     @media screen and (min-width: $layout-screen-size-threshold + 1px) {
-      .mdl-layout--fixed-drawer > & {
+      .mdl-layout--fixed-drawer > .mdl-layout__inner-container > & {
         transform: translateX(0);
       }
     }
@@ -214,7 +214,7 @@
     }
 
     @media screen and (min-width: $layout-screen-size-threshold + 1px) {
-      .mdl-layout--fixed-drawer > & {
+      .mdl-layout--fixed-drawer > .mdl-layout__inner-container > & {
         display: none;
       }
 
@@ -255,13 +255,13 @@
       min-height: $layout-mobile-header-height;
     }
 
-    .mdl-layout--fixed-drawer.is-upgraded:not(.is-small-screen) > & {
+    .mdl-layout--fixed-drawer.is-upgraded:not(.is-small-screen) > .mdl-layout__inner-container > & {
       margin-left: $layout-drawer-width;
       width: calc(100% - #{$layout-drawer-width});
     }
 
     @media screen and (min-width: $layout-screen-size-threshold + 1px) {
-      .mdl-layout--fixed-drawer > & {
+      .mdl-layout--fixed-drawer > .mdl-layout__inner-container > & {
         .mdl-layout__header-row {
           padding-left: 40px;
         }
@@ -309,7 +309,7 @@
         display: none;
       }
 
-      .mdl-layout--fixed-header > & {
+      .mdl-layout--fixed-header > .mdl-layout__inner-container > & {
         display: flex;
       }
     }
@@ -450,20 +450,20 @@
     z-index: 1;
     -webkit-overflow-scrolling: touch;
 
-    .mdl-layout--fixed-drawer > & {
+    .mdl-layout--fixed-drawer > .mdl-layout__inner-container > & {
       margin-left: $layout-drawer-width;
     }
 
-    .mdl-layout__container.has-scrolling-header & {
+    .mdl-layout.has-scrolling-header & {
       overflow: visible;
     }
 
     @media screen and (max-width: $layout-screen-size-threshold) {
-      .mdl-layout--fixed-drawer > & {
+      .mdl-layout--fixed-drawer > .mdl-layout__inner-container > & {
         margin-left: 0;
       }
 
-      .mdl-layout__container.has-scrolling-header & {
+      .mdl-layout.has-scrolling-header & {
         overflow-y: auto;
         overflow-x: hidden;
       }
diff --git a/src/layout/layout.js b/src/layout/layout.js
index b479f90..5288d87 100644
--- a/src/layout/layout.js
+++ b/src/layout/layout.js
@@ -28,6 +28,7 @@
    */
   var MaterialLayout = function MaterialLayout(element) {
     this.element_ = element;
+    this.innerContainer_ = element.querySelector('.' + this.CssClasses_.INNER_CONTAINER);
 
     // Initialize instance.
     this.init();
@@ -84,7 +85,7 @@
    * @private
    */
   MaterialLayout.prototype.CssClasses_ = {
-    CONTAINER: 'mdl-layout__container',
+    INNER_CONTAINER: 'mdl-layout__inner-container',
     HEADER: 'mdl-layout__header',
     DRAWER: 'mdl-layout__drawer',
     CONTENT: 'mdl-layout__content',
@@ -260,7 +261,7 @@
   * @public
   */
   MaterialLayout.prototype.toggleDrawer = function() {
-    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);
+    var drawerButton = this.innerContainer_.querySelector('.' + this.CssClasses_.DRAWER_BTN);
     this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
     this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
 
@@ -281,20 +282,13 @@
    */
   MaterialLayout.prototype.init = function() {
     if (this.element_) {
-      var container = document.createElement('div');
-      container.classList.add(this.CssClasses_.CONTAINER);
-
       var focusedElement = this.element_.querySelector(':focus');
 
-      this.element_.parentElement.insertBefore(container, this.element_);
-      this.element_.parentElement.removeChild(this.element_);
-      container.appendChild(this.element_);
-
       if (focusedElement) {
         focusedElement.focus();
       }
 
-      var directChildren = this.element_.childNodes;
+      var directChildren = this.innerContainer_.childNodes;
       var numChildren = directChildren.length;
       for (var c = 0; c < numChildren; c++) {
         var child = directChildren[c];
@@ -317,9 +311,9 @@
       window.addEventListener('pageshow', function(e) {
         if (e.persisted) { // when page is loaded from back/forward cache
           // trigger repaint to let layout scroll in safari
-          this.element_.style.overflowY = 'hidden';
+          this.innerContainer_.style.overflowY = 'hidden';
           requestAnimationFrame(function() {
-            this.element_.style.overflowY = '';
+            this.innerContainer_.style.overflowY = '';
           }.bind(this));
         }
       }.bind(this), false);
@@ -343,7 +337,7 @@
         } else if (this.header_.classList.contains(
             this.CssClasses_.HEADER_SCROLL)) {
           mode = this.Mode_.SCROLL;
-          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);
+          this.element_.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);
         }
 
         if (mode === this.Mode_.STANDARD) {
@@ -368,20 +362,16 @@
 
       // Add drawer toggling button to our layout, if we have an openable drawer.
       if (this.drawer_) {
-        var drawerButton = this.element_.querySelector('.' +
-          this.CssClasses_.DRAWER_BTN);
-        if (!drawerButton) {
-          drawerButton = document.createElement('div');
-          drawerButton.setAttribute('aria-expanded', 'false');
-          drawerButton.setAttribute('role', 'button');
-          drawerButton.setAttribute('tabindex', '0');
-          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);
-
-          var drawerButtonIcon = document.createElement('i');
-          drawerButtonIcon.classList.add(this.CssClasses_.ICON);
-          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;
-          drawerButton.appendChild(drawerButtonIcon);
-        }
+        var drawerButton = document.createElement('div');
+        drawerButton.setAttribute('aria-expanded', 'false');
+        drawerButton.setAttribute('role', 'button');
+        drawerButton.setAttribute('tabindex', '0');
+        drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);
+
+        var drawerButtonIcon = document.createElement('i');
+        drawerButtonIcon.classList.add(this.CssClasses_.ICON);
+        drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;
+        drawerButton.appendChild(drawerButtonIcon);
 
         if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {
           //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.
@@ -407,12 +397,12 @@
         if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {
           this.header_.insertBefore(drawerButton, this.header_.firstChild);
         } else {
-          this.element_.insertBefore(drawerButton, this.content_);
+          this.innerContainer_.insertBefore(drawerButton, this.content_);
         }
 
         var obfuscator = document.createElement('div');
         obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);
-        this.element_.appendChild(obfuscator);
+        this.innerContainer_.appendChild(obfuscator);
         obfuscator.addEventListener('click',
             this.drawerToggleHandler_.bind(this));
         this.obfuscator_ = obfuscator;
diff --git a/src/mdlComponentHandler.js b/src/mdlComponentHandler.js
index 843a5ac..2fd3542 100644
--- a/src/mdlComponentHandler.js
+++ b/src/mdlComponentHandler.js
@@ -1,3 +1,5 @@
+if (typeof window === 'undefined') return;
+
 /**
  * @license
  * Copyright 2015 Google Inc. All Rights Reserved.
@@ -476,7 +478,6 @@ window.addEventListener('load', function() {
       'querySelector' in document &&
       'addEventListener' in window && Array.prototype.forEach) {
     document.documentElement.classList.add('mdl-js');
-    componentHandler.upgradeAllRegistered();
   } else {
     /**
      * Dummy function to avoid JS errors.
-- 
2.8.1

